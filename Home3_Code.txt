/* Home Work 1 - task 3 */


dataSet = LOAD '{file1_task_1.csv,file2_task_1.csv,file3_task_1.csv,file4_task_1.csv}' USING PigStorage(',') as (
name:chararray, id:int, 
porches_1:int, porches_2:int, porches_3:int, porches_4:int, porches_5:int, porches_6:int, porches_7:int,
text_1:chararray, text_2:chararray, text_3:chararray, text_4:chararray, text_5:chararray);


DisdataSet = DISTINCT dataSet;
OreDataSet = ORDER DisdataSet BY id;



task_3_1_dataset =  FOREACH OreDataSet GENERATE 
	/*1*/	name,
	/*2*/	id,
	/*3*/	LOWER(text_1) AS lower_case_text_1,
	/*4*/	SIZE(text_1) AS length_of_text_1, 
	/*5*/	UCFIRST(LOWER(REPLACE(text_1,'the','')),' ',100) AS new_text_1,
	/*6*/	SIZE(REPLACE(text_1,'the','')) AS new_text_1_length,
	/*7*/	SIZE(text_1) - SIZE(REPLACE(text_1,'the','')) AS num_of_letters_deleted,
	/*8*/	SIZE(STRSPLIT(text_1,' ',100)) AS num_of_words_text_1_new,
	/*9*/	LOWER(text_5) AS lower_case_text_5,
	/*10*/	SIZE(text_5) AS length_of_text_5,
	/*11*/	UCFIRST(LOWER(REPLACE(text_5,'if',''))) AS new_text_5,
	/*12*/	SIZE(REPLACE(text_5,'if','')) AS new_text_5_length,
	/*13*/	SIZE(text_5) - SIZE(REPLACE(text_5,'if','')) AS num_of_letters_deleted_text_5,
	/*14*/	SIZE(STRSPLIT(text_5,' ',100)) AS num_of_words_text_5_new,
	/*15*/	SIZE(CONCAT(text_1,text_5)) AS num_of_str_5_1,
	/*16*/	CONCAT(UCFIRST(LOWER(REPLACE(text_1,'the',''))),' ',UCFIRST(LOWER(REPLACE(text_5,'if','')))) AS text_1_text_5:chararray,
	/*18*/  CONCAT(text_1,text_2,text_3,text_4,text_5) AS text_1_to_text_5:chararray,
	
	
			INDEXOF(UCFIRST(LOWER(REPLACE(text_1,'the',''))),' ',0);
/*DESCRIBE task_3_1_dataset;*/
/*DUMP task_3_1_dataset;*/


/*SH echo '********************************************** 9999999 ***********************************';*/
	

	
task_3_2_dataset = FOREACH task_3_1_dataset GENERATE 

	/*1*/	name,
	/*2*/	id,
	/*3*/	lower_case_text_1,
	/*4*/	length_of_text_1,
	
/*   replacing every first letter in the text without 'the' to uppercase    */

	/*5*/	TRIM(CONCAT(
				 (CASE 
					WHEN UCFIRST(STRSPLIT(new_text_1).$0) IS NULL THEN ''
					WHEN UCFIRST(STRSPLIT(new_text_1).$0) IS NOT NULL THEN UCFIRST(STRSPLIT(new_text_1).$0)
					END),' ',
				 (CASE 
					WHEN UCFIRST(STRSPLIT(new_text_1).$1) IS NULL THEN ''
					WHEN UCFIRST(STRSPLIT(new_text_1).$1) IS NOT NULL THEN UCFIRST(STRSPLIT(new_text_1).$1)
					END),' ',
				 (CASE 
					WHEN UCFIRST(STRSPLIT(new_text_1).$2) IS NULL THEN ''
					WHEN UCFIRST(STRSPLIT(new_text_1).$2) IS NOT NULL THEN UCFIRST(STRSPLIT(new_text_1).$2)
					END),' ',
				 (CASE 
					WHEN UCFIRST(STRSPLIT(new_text_1).$3) IS NULL THEN ''
					WHEN UCFIRST(STRSPLIT(new_text_1).$3) IS NOT NULL THEN UCFIRST(STRSPLIT(new_text_1).$3)
					END),' ',
				 (CASE 
					WHEN UCFIRST(STRSPLIT(new_text_1).$4) IS NULL THEN ''
					WHEN UCFIRST(STRSPLIT(new_text_1).$4) IS NOT NULL THEN UCFIRST(STRSPLIT(new_text_1).$4)
					END),' ',
				 (CASE 
					WHEN UCFIRST(STRSPLIT(new_text_1).$5) IS NULL THEN ''
					WHEN UCFIRST(STRSPLIT(new_text_1).$5) IS NOT NULL THEN UCFIRST(STRSPLIT(new_text_1).$5)
					END),' ',
				(CASE 
					WHEN UCFIRST(STRSPLIT(new_text_1).$6) IS NULL THEN ''
					WHEN UCFIRST(STRSPLIT(new_text_1).$6) IS NOT NULL THEN UCFIRST(STRSPLIT(new_text_1).$6)
					END),' ',
				 (CASE 
					WHEN UCFIRST(STRSPLIT(new_text_1).$7) IS NULL THEN ''
					WHEN UCFIRST(STRSPLIT(new_text_1).$7) IS NOT NULL THEN UCFIRST(STRSPLIT(new_text_1).$7)
					END),' ',
				 (CASE 
					WHEN UCFIRST(STRSPLIT(new_text_1).$8) IS NULL THEN ''
					WHEN UCFIRST(STRSPLIT(new_text_1).$8) IS NOT NULL THEN UCFIRST(STRSPLIT(new_text_1).$8)
					END),' ',
				 (CASE 
					WHEN UCFIRST(STRSPLIT(new_text_1).$9) IS NULL THEN ''
					WHEN UCFIRST(STRSPLIT(new_text_1).$9) IS NOT NULL THEN UCFIRST(STRSPLIT(new_text_1).$9)
					END))) AS big_first_letter_final,
					
					
	/*6*/	new_text_1_length,
	/*7*/	num_of_letters_deleted,
	/*8*/	SIZE(STRSPLIT(new_text_1,' ',100)) AS num_of_words_text_1_new,
	/*9*/	lower_case_text_5,
	/*10*/	length_of_text_5,
	
	
/*   replacing every first letter in the text without 'if' to uppercase    */
	/*11*/	TRIM(CONCAT(
				 (CASE 
					WHEN UCFIRST(STRSPLIT(new_text_5).$0) IS NULL THEN ''
					WHEN UCFIRST(STRSPLIT(new_text_5).$0) IS NOT NULL THEN UCFIRST(STRSPLIT(new_text_5).$0)
					END),' ',
				 (CASE 
					WHEN UCFIRST(STRSPLIT(new_text_5).$1) IS NULL THEN ''
					WHEN UCFIRST(STRSPLIT(new_text_5).$1) IS NOT NULL THEN UCFIRST(STRSPLIT(new_text_5).$1)
					END),' ',
				 (CASE 
					WHEN UCFIRST(STRSPLIT(new_text_5).$2) IS NULL THEN ''
					WHEN UCFIRST(STRSPLIT(new_text_5).$2) IS NOT NULL THEN UCFIRST(STRSPLIT(new_text_5).$2)
					END),' ',
				 (CASE 
					WHEN UCFIRST(STRSPLIT(new_text_5).$3) IS NULL THEN ''
					WHEN UCFIRST(STRSPLIT(new_text_5).$3) IS NOT NULL THEN UCFIRST(STRSPLIT(new_text_5).$3)
					END),' ',
				 (CASE 
					WHEN UCFIRST(STRSPLIT(new_text_5).$4) IS NULL THEN ''
					WHEN UCFIRST(STRSPLIT(new_text_5).$4) IS NOT NULL THEN UCFIRST(STRSPLIT(new_text_5).$4)
					END),' ',
				 (CASE 
					WHEN UCFIRST(STRSPLIT(new_text_5).$5) IS NULL THEN ''
					WHEN UCFIRST(STRSPLIT(new_text_5).$5) IS NOT NULL THEN UCFIRST(STRSPLIT(new_text_5).$5)
					END),' ',
				 (CASE 
					WHEN UCFIRST(STRSPLIT(new_text_5).$6) IS NULL THEN ''
					WHEN UCFIRST(STRSPLIT(new_text_5).$6) IS NOT NULL THEN UCFIRST(STRSPLIT(new_text_5).$6)
					END),' ',
				 (CASE 
					WHEN UCFIRST(STRSPLIT(new_text_5).$7) IS NULL THEN ''
					WHEN UCFIRST(STRSPLIT(new_text_5).$7) IS NOT NULL THEN UCFIRST(STRSPLIT(new_text_5).$7)
					END),' ',
				 (CASE 
					WHEN UCFIRST(STRSPLIT(new_text_5).$8) IS NULL THEN ''
					WHEN UCFIRST(STRSPLIT(new_text_5).$8) IS NOT NULL THEN UCFIRST(STRSPLIT(new_text_5).$8)
					END),' ',
				 (CASE 
					WHEN UCFIRST(STRSPLIT(new_text_5).$9) IS NULL THEN ''
					WHEN UCFIRST(STRSPLIT(new_text_5).$9) IS NOT NULL THEN UCFIRST(STRSPLIT(new_text_5).$9)
									
					END))) AS big_first_letter_final_2,
			
	/*12*/	new_text_5_length,
	/*13*/	num_of_letters_deleted_text_5,
	/*14*/	num_of_words_text_5_new,
	/*15*/	num_of_str_5_1,
	
	
	/*   Removing words smaller thae 3 letters and reconncting without this words     */
	
/*SH echo '********************************************** task 3.16 ***********************************';*/
	
	/*16*/	TRIM(CONCAT(
				 (CASE 
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$0) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$0)) == 0 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$0)) > 3 THEN UCFIRST(STRSPLIT(text_1_text_5).$0)
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$0)) <= 3 THEN ''
					END),
					
				 (CASE
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$0) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$0)) > 3 THEN ' '
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$0)) <= 3 THEN ''
					END),
					

					
				 (CASE 
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$1) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$1)) == 0 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$1)) > 3 THEN UCFIRST(STRSPLIT(text_1_text_5).$1)
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$1)) == 3 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$1)) < 4 THEN ''
					END),
					
				 (CASE
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$1) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$1)) > 3 THEN ' '
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$1)) <= 3 THEN ''
					END),
					
				 (CASE 
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$2) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$2)) == 0 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$2)) > 3 THEN UCFIRST(STRSPLIT(text_1_text_5).$2)
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$2)) == 3 THEN ''					
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$2)) < 4 THEN ''
					END),
					
				 (CASE
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$2) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$2)) > 3 THEN ' '
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$2)) <= 3 THEN ''
					END),
					
				 (CASE 
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$3) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$3)) == 0 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$3)) > 3 THEN UCFIRST(STRSPLIT(text_1_text_5).$3)
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$3)) == 3 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$3)) < 4 THEN ''
					END),
					
				 (CASE
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$3) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$3)) > 3 THEN ' '
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$3)) <= 3 THEN ''
					END),
					
				 (CASE 
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$4) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$4)) == 0 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$4)) > 3 THEN UCFIRST(STRSPLIT(text_1_text_5).$4)
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$4)) == 3 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$4)) < 4 THEN ''
					END),
					
				 (CASE
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$4) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$4)) > 3 THEN ' '
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$4)) <= 3 THEN ''
					END),
					
				 (CASE 
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$5) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$5)) == 0 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$5)) > 3 THEN UCFIRST(STRSPLIT(text_1_text_5).$5)
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$5)) == 3 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$5)) < 4 THEN ''
					END),
					
				 (CASE
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$5) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$5)) > 3 THEN ' '
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$5)) <= 3 THEN ''
					END),
					
				 (CASE 
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$6) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$6)) == 0 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$6)) > 3 THEN UCFIRST(STRSPLIT(text_1_text_5).$6)
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$6)) == 3 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$6)) < 4 THEN ''
					END),
					
				 (CASE
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$6) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$6)) > 3 THEN ' '
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$6)) <= 3 THEN ''
					END),
					
				 (CASE 
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$7) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$7)) == 0 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$7)) > 3 THEN UCFIRST(STRSPLIT(text_1_text_5).$7)
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$7)) == 3 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$7)) < 4 THEN ''
					END),
					
				 (CASE
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$7) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$7)) > 3 THEN ' '
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$7)) <= 3 THEN ''
					END),
				
				 (CASE 
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$8) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$8)) == 0 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$8)) > 3 THEN UCFIRST(STRSPLIT(text_1_text_5).$8)
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$8)) == 3 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$8)) < 4 THEN ''
					END),
					

				 (CASE
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$8) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$8)) > 3 THEN ' '
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$8)) <= 3 THEN ''
					END),
					
				 (CASE 
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$9) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$9)) == 0 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$9)) > 3 THEN UCFIRST(STRSPLIT(text_1_text_5).$9)
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$9)) == 3 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$9)) < 4 THEN ''
					END),
					

				 (CASE
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$9) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$9)) > 3 THEN ' '
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$9)) <= 3 THEN ''
					END),
					
				 (CASE 
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$10) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$10)) == 0 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$10)) > 3 THEN UCFIRST(STRSPLIT(text_1_text_5).$10)
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$10)) == 3 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$10)) < 4 THEN ''
					END),
					

				 (CASE
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$10) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$10)) > 3 THEN ' '
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$10)) <= 3 THEN ''
					END),
					
				 (CASE 
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$11) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$11)) == 0 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$11)) > 3 THEN UCFIRST(STRSPLIT(text_1_text_5).$11)
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$11)) == 3 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$11)) < 4 THEN ''
					END),
			
				 (CASE
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$11) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$11)) > 3 THEN ' '
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$11)) <= 3 THEN ''
					END),
					
					
				 (CASE 
					WHEN UCFIRST(STRSPLIT(text_1_text_5).$12) IS NULL THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$12)) == 0 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$12)) > 3 THEN UCFIRST(STRSPLIT(text_1_text_5).$12)
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$12)) == 3 THEN ''
					WHEN SIZE(UCFIRST(STRSPLIT(text_1_text_5).$12)) < 4 THEN ''
					END))) AS words_bigger_then_3_letters,	
	
	/*17*/	num_of_words_text_1_new + num_of_words_text_5_new;
	
		

/*SH echo '********************************************** total customers purchases ***********************************';*/
/*DESCRIBE task_3_1_dataset;*/
/*DUMP task_3_1_dataset;*/
	
	

/*SH echo '********************************************** 222222 ***********************************';*/
/*DESCRIBE task_3_2_dataset;*/
/*DUMP task_3_2_dataset;*/
		


task_3_3_dataset = FOREACH task_3_2_dataset GENERATE 

	/*1*/	name,
	/*2*/	id,
	/*3*/	lower_case_text_1,
	/*4*/	length_of_text_1,
	/*5*/	big_first_letter_final,		
	/*6*/	new_text_1_length,
	/*7*/	num_of_letters_deleted,
	/*8*/	num_of_words_text_1_new,
	/*9*/	lower_case_text_5,
	/*10*/	length_of_text_5,
	/*11*/	big_first_letter_final_2,			
	/*12*/	new_text_5_length,
	/*13*/	num_of_letters_deleted_text_5,
	/*14*/	num_of_words_text_5_new,
	/*15*/	num_of_str_5_1,
	/*16*/  SIZE(STRSPLIT(words_bigger_then_3_letters,' ',100)) AS words_bigger_then_3_letters_2,
	/*17*/	num_of_words_text_1_new + num_of_words_text_5_new AS num_of_words_1_5;
	
	
/*SH echo '********************************************** task_3_3_dataset ***********************************';*/	
/*DESCRIBE task_3_3_dataset;*/
/*DUMP task_3_3_dataset;*/



/*SH echo '********************************************** task 3.18 ***********************************';*/


/*   Replacing all good and bad in '******'      */

task_3_dataset = FOREACH task_3_1_dataset GENERATE 
id,
REPLACE(text_1_to_text_5,'good',' ****** ') as dd;
/*DESCRIBE task_3_dataset;*/
/*DUMP task_3_dataset;*/

task_3_1_2dataset = FOREACH task_3_dataset GENERATE 
id,
REPLACE(dd,'bad','******') as dd;
/*DESCRIBE task_3_1_2dataset;*/
/*DUMP task_3_1_2dataset;*/


/*   flatting the results per word to id    */

task_3_1_1dataset = FOREACH task_3_1_2dataset GENERATE 
id,
FLATTEN(TOKENIZE(dd,' ')) as dd;
/*DESCRIBE task_3_1_1dataset;*/
/*DUMP task_3_1_1dataset;*/


/*   filtring the by '******' represnting 'good' and 'bad'   */


filterd_task_3_dataset =  FILTER task_3_1_1dataset BY (dd == '******');
/*DESCRIBE filterd_task_3_dataset;*/
/*DUMP filterd_task_3_dataset;*/

/*   Grouping and counting number of cases by id   */

group_words = FOREACH (group filterd_task_3_dataset by id) GENERATE
	group,
	COUNT(filterd_task_3_dataset) as num_of_good_or_bad_in_group:int;
	

	
/*SH echo '********************************************** group_words ***********************************';	*/
/*DESCRIBE group_words;*/
/*DUMP group_words;*/

/*   LEFT joining the number of cases to the main output table   */

final_final = FOREACH(JOIN task_3_3_dataset BY (id) LEFT,group_words BY (group)) GENERATE
	/*1*/	name,
	/*2*/	id,
	/*3*/	lower_case_text_1,
	/*4*/	length_of_text_1,
	/*5*/	big_first_letter_final,		
	/*6*/	new_text_1_length,
	/*7*/	num_of_letters_deleted,
	/*8*/	num_of_words_text_1_new,
	/*9*/	lower_case_text_5,
	/*10*/	length_of_text_5,
	/*11*/	big_first_letter_final_2,			
	/*12*/	new_text_5_length,
	/*13*/	num_of_letters_deleted_text_5,
	/*14*/	num_of_words_text_5_new,
	/*15*/	num_of_str_5_1,
	/*16*/  words_bigger_then_3_letters_2,
	/*17*/	num_of_words_text_1_new + num_of_words_text_5_new AS num_of_words_1_5,
	/*18*/	(CASE
				WHEN num_of_good_or_bad_in_group IS NULL THEN 0
				WHEN num_of_good_or_bad_in_group IS NOT NULL THEN num_of_good_or_bad_in_group 
				END) AS num_of_good_and_bad;
			
			
/*SH echo '********************************************** final_final ***********************************';				*/
/*DESCRIBE final_final;*/
/*DUMP final_final;*/


/*   Ordring main output table by number of words in text1 and text5   */


SH echo '********************************************** final_ordered_table ***********************************';

final_ordered_table = ORDER final_final BY (num_of_words_1_5);
DESCRIBE final_ordered_table;
DUMP final_ordered_table;
			
